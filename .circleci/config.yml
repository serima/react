version: 2

defaults: &defaults
  working_directory: ~/project/react
  docker:
    - image: starefossen/ruby-node:2-8

default_filters: &default_filters
  tags:
    only: '/^v[0-9]\+\.[0-9]\+\.[0-9]\+$/'

restore_node_modules: &restore_node_modules
  restore_cache:
    name: Restore node_modules cache
    keys:
      - v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v1-node-{{ .Branch }}-
      - v1-node-

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - *restore_node_modules
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          name: Save yarn cache
          key: v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - .cache/yarn
      - save_cache:
          name: Save node_modules cache
          key: v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run:
          name: Remove node_modules to cleanup workspace
          command: rm -r node_modules/
      - persist_to_workspace:
          root: ~/project
          paths:
            - react
  eslint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: eslint
          command: node ./scripts/tasks/eslint

  coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: coverage
          command: ./scripts/circleci/test_coverage.sh

  prettier:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: prettier
          command: node ./scripts/prettier/index

  flow:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: flow
          command: node ./scripts/tasks/flow

  jest:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: jest
          command: node ./scripts/tasks/jest

  test_print_warnings:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: test_print_warnings
          command: ./scripts/circleci/test_print_warnings.sh

  check_license:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: check_license
          command: ./scripts/circleci/check_license.sh

  track_stats:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: skip fingerprints
          command: |
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      - run:
          name: track_stats
          command: ./scripts/circleci/track_stats.sh

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - *restore_node_modules
      - run:
          name: build
          command: ./scripts/circleci/build.sh

workflows:
  version: 2
  install-test-build-and-deploy:
    jobs:
      - install:
          filters: *default_filters
      - eslint:
          filters: *default_filters
          requires:
            - install
      - coverage:
          filters: *default_filters
          requires:
            - install
      - prettier:
          filters: *default_filters
          requires:
            - install
      - flow:
          filters: *default_filters
          requires:
            - install
      - jest:
          filters: *default_filters
          requires:
            - install
      - test_print_warnings:
          filters: *default_filters
          requires:
            - install
      - check_license:
          filters: *default_filters
          requires:
            - install
      - track_stats:
          filters: *default_filters
          requires:
            - install
      - build:
          filters: *default_filters
          requires:
            - install
